-- MySQL Script generated by MySQL Workbench
-- Tue Sep 24 23:22:25 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema truckpad_db
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `truckpad_db` ;

-- -----------------------------------------------------
-- Schema truckpad_db
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `truckpad_db` DEFAULT CHARACTER SET utf8 ;
USE `truckpad_db` ;

-- -----------------------------------------------------
-- Table `truckpad_db`.`CNHTypes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `truckpad_db`.`CNHTypes` ;

CREATE TABLE IF NOT EXISTS `truckpad_db`.`CNHTypes` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Description` VARCHAR(45) NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `truckpad_db`.`Genders`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `truckpad_db`.`Genders` ;

CREATE TABLE IF NOT EXISTS `truckpad_db`.`Genders` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Description` VARCHAR(45) NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `truckpad_db`.`Drivers`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `truckpad_db`.`Drivers` ;

CREATE TABLE IF NOT EXISTS `truckpad_db`.`Drivers` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Name` VARCHAR(256) NULL,
  `LastName` VARCHAR(256) NULL,
  `DateOfBirth` DATETIME NULL,
  `FK_Gender` INT NULL,
  `FK_CNHTypes` INT NULL,
  `OwnVehicle` TINYINT NOT NULL,
  `InsertDate` DATETIME NULL,
  PRIMARY KEY (`ID`),
  INDEX `FK_CNHType_idx` (`FK_CNHTypes` ASC) ,
  INDEX `FK_Gender_idx` (`FK_Gender` ASC) ,
  CONSTRAINT `FK_CNHTypes`
    FOREIGN KEY (`FK_CNHTypes`)
    REFERENCES `truckpad_db`.`CNHTypes` (`ID`)
    ON DELETE SET NULL
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_Gender`
    FOREIGN KEY (`FK_Gender`)
    REFERENCES `truckpad_db`.`Genders` (`ID`)
    ON DELETE SET NULL
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `truckpad_db`.`TruckTypes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `truckpad_db`.`TruckTypes` ;

CREATE TABLE IF NOT EXISTS `truckpad_db`.`TruckTypes` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Description` VARCHAR(45) NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `truckpad_db`.`Addresses`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `truckpad_db`.`Addresses` ;

CREATE TABLE IF NOT EXISTS `truckpad_db`.`Addresses` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `Lng` DECIMAL(11,8) NOT NULL,
  `Lat` DECIMAL(10,8) NOT NULL,
  `Address` VARCHAR(256) NOT NULL,
  `StreetNumber` VARCHAR(90) NOT NULL,
  `City` VARCHAR(90) NOT NULL,
  `State` VARCHAR(90) NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `truckpad_db`.`Itineraries`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `truckpad_db`.`Itineraries` ;

CREATE TABLE IF NOT EXISTS `truckpad_db`.`Itineraries` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `FK_Drivers` INT NULL,
  `Loaded` TINYINT NULL,
  `FK_TruckType` INT NULL,
  `Finished` TINYINT NOT NULL,
  `InsertDate` DATETIME NULL,
  `LoadDateTime` DATETIME NULL,
  `UnLoadDateTime` DATETIME NULL,
  `FK_Dest_Addresses` INT NULL,
  `FK_Origin_Addresses` INT NULL,
  PRIMARY KEY (`ID`),
  INDEX `FK_Driver_idx` (`FK_Drivers` ASC) ,
  INDEX `FK_TruckType_idx` (`FK_TruckType` ASC) ,
  INDEX `FK_Origin_Addresses` (`FK_Dest_Addresses` ASC) ,
  INDEX `FK_Dest_Addresses` (`FK_Origin_Addresses` ASC) ,
  CONSTRAINT `FK_Drivers`
    FOREIGN KEY (`FK_Drivers`)
    REFERENCES `truckpad_db`.`Drivers` (`ID`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_TruckTypes`
    FOREIGN KEY (`FK_TruckType`)
    REFERENCES `truckpad_db`.`TruckTypes` (`ID`)
    ON DELETE SET NULL
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_Dest_Addresses`
    FOREIGN KEY (`FK_Dest_Addresses`)
    REFERENCES `truckpad_db`.`Addresses` (`ID`)
    ON DELETE SET NULL
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_Origin_Addresses`
    FOREIGN KEY (`FK_Origin_Addresses`)
    REFERENCES `truckpad_db`.`Addresses` (`ID`)
    ON DELETE SET NULL
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `truckpad_db`.`CNHTypes`
-- -----------------------------------------------------
START TRANSACTION;
USE `truckpad_db`;
INSERT INTO `truckpad_db`.`CNHTypes` (`ID`, `Description`) VALUES (1, 'A');
INSERT INTO `truckpad_db`.`CNHTypes` (`ID`, `Description`) VALUES (2, 'B');
INSERT INTO `truckpad_db`.`CNHTypes` (`ID`, `Description`) VALUES (3, 'C');
INSERT INTO `truckpad_db`.`CNHTypes` (`ID`, `Description`) VALUES (4, 'D');
INSERT INTO `truckpad_db`.`CNHTypes` (`ID`, `Description`) VALUES (5, 'E');

COMMIT;


-- -----------------------------------------------------
-- Data for table `truckpad_db`.`Genders`
-- -----------------------------------------------------
START TRANSACTION;
USE `truckpad_db`;
INSERT INTO `truckpad_db`.`Genders` (`ID`, `Description`) VALUES (1, 'Masculino');
INSERT INTO `truckpad_db`.`Genders` (`ID`, `Description`) VALUES (2, 'Feminino');
INSERT INTO `truckpad_db`.`Genders` (`ID`, `Description`) VALUES (3, 'Outro');

COMMIT;


-- -----------------------------------------------------
-- Data for table `truckpad_db`.`Drivers`
-- -----------------------------------------------------
START TRANSACTION;
USE `truckpad_db`;
INSERT INTO `truckpad_db`.`Drivers` (`ID`, `Name`, `LastName`, `DateOfBirth`, `FK_Gender`, `FK_CNHTypes`, `OwnVehicle`, `InsertDate`) VALUES (1, 'Leonardo', 'Bonetti', '1998-05-04 00:00:00', 1, 4, 1, '2019-09-23 00:00:00');
INSERT INTO `truckpad_db`.`Drivers` (`ID`, `Name`, `LastName`, `DateOfBirth`, `FK_Gender`, `FK_CNHTypes`, `OwnVehicle`, `InsertDate`) VALUES (2, 'J達o', 'Silveira', '1999-01-01 00:00:00', 1, 4, 1, '2019-09-23 00:00:00');
INSERT INTO `truckpad_db`.`Drivers` (`ID`, `Name`, `LastName`, `DateOfBirth`, `FK_Gender`, `FK_CNHTypes`, `OwnVehicle`, `InsertDate`) VALUES (3, 'Jorge', 'Trancoso', '1985-01-01 00:00:00', 1, 4, 1, '2019-09-23 00:00:00');
INSERT INTO `truckpad_db`.`Drivers` (`ID`, `Name`, `LastName`, `DateOfBirth`, `FK_Gender`, `FK_CNHTypes`, `OwnVehicle`, `InsertDate`) VALUES (4, 'Bino', 'Silva', '1960-01-01 00:00:00', 1, 4, 1, '2019-09-23 00:00:00');
INSERT INTO `truckpad_db`.`Drivers` (`ID`, `Name`, `LastName`, `DateOfBirth`, `FK_Gender`, `FK_CNHTypes`, `OwnVehicle`, `InsertDate`) VALUES (5, 'Pedro', 'Estrada', '1950-01-25 00:00:00', 1, 4, 1, '2019-09-23 00:00:00');

COMMIT;


-- -----------------------------------------------------
-- Data for table `truckpad_db`.`TruckTypes`
-- -----------------------------------------------------
START TRANSACTION;
USE `truckpad_db`;
INSERT INTO `truckpad_db`.`TruckTypes` (`ID`, `Description`) VALUES (1, 'Caminh達o 3/4');
INSERT INTO `truckpad_db`.`TruckTypes` (`ID`, `Description`) VALUES (2, 'Caminh達o Toco');
INSERT INTO `truckpad_db`.`TruckTypes` (`ID`, `Description`) VALUES (3, 'Caminh達o Truck');
INSERT INTO `truckpad_db`.`TruckTypes` (`ID`, `Description`) VALUES (4, 'Carreta Simples');
INSERT INTO `truckpad_db`.`TruckTypes` (`ID`, `Description`) VALUES (5, 'Carreta Eixo Extendido');

COMMIT;


DELIMITER $$
CREATE DEFINER=`admin`@`%` PROCEDURE `GetDrivers`(

	IN ID INT(11),
    IN OwnVehicle bool

)
BEGIN
	SELECT * FROM Drivers WHERE
    (ID IS NULL OR ID = Drivers.ID) AND
    (OwnVehicle IS NULL OR OwnVehicle = Drivers.OwnVehicle);
END;$$
DELIMITER ;


DELIMITER $$
CREATE DEFINER=`admin`@`%` PROCEDURE `GetItineraries`(
	IN InitialLoadPeriod DATETIME,
    IN FinalLoadPeriod DATETIME,
    IN FK_TruckType INT(11),
    IN Loaded bool,
    IN Finished bool,
    IN OAState VARCHAR(256),
    IN OACity VARCHAR(256),
	IN DAState VARCHAR(256),
    IN DACity VARCHAR(256),
    IN ID int(11)
)
BEGIN
SELECT I.ID IDItinerarie, D.ID IDDriver, CONCAT(D.Name, ' ', D.Lastname) DriverName,TT.ID TruckTypeID, I.Loaded,
    TT.Description TruckTypeDescription, I.Finished, I.LoadDateTime, I.UnLoadDateTime,
    OA.ID as OrigAdressID,OA.Lng OrigLongitude, OA.Lat OrigLatitude, OA.Address OrigAddress, OA.StreetNumber OrigStreetNumber, OA.City OrigCity, OA.State OrigState,
    DA.ID as DestAdressID,DA.Lng DestLongitude, DA.Lat DestLatitude, DA.Address DestAddress, DA.StreetNumber DestStreetNumber , DA.City DestCity, DA.State DestState

    FROM DRIVERS D
    inner join ITINERARIES I on I.FK_DRIVERS = D.ID
    inner join Addresses OA on OA.ID = I.FK_Dest_Addresses
    inner join Addresses DA on DA.ID = I.FK_Origin_Addresses
    inner join trucktypes TT on TT.ID = I.FK_TruckType
    WHERE
		(Finished IS NULL OR I.Finished = Finished) AND
		(Loaded IS NULL OR I.Loaded = Loaded) AND
        (InitialLoadPeriod IS NULL OR I.LoadDateTime >= InitialLoadPeriod ) AND
        (FinalLoadPeriod IS NULL OR I.LoadDateTime <= FinalLoadPeriod) AND
        (FK_TruckType IS NULL OR I.FK_TruckType = FK_TruckType) AND
        (OAState IS NULL OR OA.State = OAState) AND
        (OACity IS NULL OR OA.City = OACity) AND
        (DAState IS NULL OR DA.State = DAState) AND
        (DACity IS NULL OR DA.City = DACity) AND
        (ID IS NULL OR I.ID = ID);
END;$$
DELIMITER ;


DELIMITER $$
CREATE DEFINER=`admin`@`%` PROCEDURE `GetItinerariesGroupedByDay`(
	IN InitialLoadPeriod DATETIME,
    IN FinalLoadPeriod DATETIME,
    IN Loaded BOOL
)
BEGIN
	IF(InitialLoadPeriod IS NULL  OR FinalLoadPeriod IS NULL)
    THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'NULL is not allowed.';
	END IF;

SELECT DATE(I.LoadDateTime) AS Period,
       COUNT(*) AS Itineraries
  FROM Itineraries I
  WHERE
	(InitialLoadPeriod IS NULL OR I.LoadDateTime >= InitialLoadPeriod ) AND
	(FinalLoadPeriod IS NULL OR I.LoadDateTime <= FinalLoadPeriod) AND
    (Loaded IS NULL OR I.Loaded = Loaded)
 GROUP BY DATE(I.LoadDateTime)
 ORDER BY DATE(I.LoadDateTime);
END;$$
DELIMITER ;


DELIMITER $$
CREATE DEFINER=`admin`@`%` PROCEDURE `GetItinerariesGroupedByMonth`(
	IN InitialLoadPeriod DATETIME,
    IN FinalLoadPeriod DATETIME,
    IN Loaded BOOL
)
BEGIN
	IF(InitialLoadPeriod IS NULL  OR FinalLoadPeriod IS NULL)
    THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'NULL is not allowed.';
	END IF;

SELECT DATE_FORMAT(I.LoadDateTime, '%Y-%m') AS Period,
       COUNT(*) AS Itineraries
  FROM Itineraries I
  WHERE
	(InitialLoadPeriod IS NULL OR I.LoadDateTime >= InitialLoadPeriod ) AND
	(FinalLoadPeriod IS NULL OR I.LoadDateTime <= FinalLoadPeriod) AND
    (Loaded IS NULL OR I.Loaded = Loaded)
 GROUP BY MONTH(DATE(LoadDateTime)),YEAR(DATE(LoadDateTime))
 ORDER BY YEAR(DATE(LoadDateTime)),MONTH(DATE(LoadDateTime));
END;$$
DELIMITER ;

DELIMITER $$
CREATE DEFINER=`admin`@`%` PROCEDURE `GetItinerariesGroupedByYear`(
	IN InitialLoadPeriod DATETIME,
    IN FinalLoadPeriod DATETIME,
    IN Loaded BOOL
)
BEGIN
	IF(InitialLoadPeriod IS NULL  OR FinalLoadPeriod IS NULL)
    THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'NULL is not allowed.';
	END IF;

SELECT DATE_FORMAT(I.LoadDateTime, '%Y') AS Period,
       COUNT(*) AS Itineraries
  FROM Itineraries I

  WHERE
	(InitialLoadPeriod IS NULL OR I.LoadDateTime >= InitialLoadPeriod) AND
	(FinalLoadPeriod IS NULL OR I.LoadDateTime <= FinalLoadPeriod) AND
    (Loaded IS NULL OR I.Loaded = Loaded)
 GROUP BY YEAR(DATE(LoadDateTime))
 ORDER BY YEAR(DATE(LoadDateTime));
END;$$
DELIMITER ;



